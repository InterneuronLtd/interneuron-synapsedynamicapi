{
  "API_Version": "1.0",
  "SynapseCore": {
    "ConnectionStrings": {
      "SynapseDataStore": "POSTGRES_SYNAPSE_DB_CONNECTION_STRINGMaximum Pool Size=512;",
      "SynapseIdentityStore": "POSTGRES_SYNAPSE_IDENTITY_DB_CONNECTION_STRINGMaximum Pool Size=512;"
    },
    "Settings": {
      "AuthorizationAuthority": "SYNAPSE_IDENTITY_URI",
      "AuthorizationAudience": "dynamicapi",
      "WriteAccessAPIScope": "dynamicapi.write",
      "ReadAccessAPIScope": "dynamicapi.read",
      "SynapseRolesClaimType": "SynapseRoles",
      "DynamicAPIWriteAccessRole": "DynamicApiWriters",
      "DynamicAPIReadAccessRole": "DynamicApiReaders",
      "TokenUserIdClaimType": "IPUId",
      "IgnoreIdentitySeverSSLErrors": "true",
      "ShowIdentitySeverPIIinLogs": "true",
      "MRN_ID_TYPE": "MRN",
      "EMPI_ID_TYPE": "NHS",
      "TransactionEndpointDelimiter": "|",
      "PHIUserRole": "PHI User",
      "ResearchAPIHashSalt": "Base64String",
      "BlackListedSqlKeywords": [ "union ", "--", "/*", "delete ", "drop ", "update ", "insert ", "truncate ", "alter ", "rename ", "create ", "lock ", ";", "revoke ", "grant ", "show ", " from " ],
      "BlackListRegex": {
        "limit": "(?i:\\b(select|delete|drop|update|truncate|alter|rename|create|lock|revoke|grant|show|set|from|set_config|case|when|inet_(\\w{1,100})|pg_(\\w{1,100})|who_(\\w{1,100})|exec(ute){0,1}|insert( +into){0,1}|merge|union( all){0,1}|current_catalog|current_user|current_role|current_query|current_database|current_schema|session_user|user|ascii)\\b)|--|;|\\([\\w\\W]*\\)",
        "global": "(?i:\\b(select|delete|drop|update|truncate|alter|rename|create|lock|revoke|grant|show|set|from|set_config|case|when|inet_(\\w{1,100})|pg_(\\w{1,100})|who_(\\w{1,100})|exec(ute){0,1}|insert( +into){0,1}|merge|union( all){0,1}|current_catalog|current_user|current_role|current_query|current_database|current_schema|session_user|user|ascii)\\b)|--|;|\\([\\w\\W]*\\)",
        "select": "(?i:\\b(select[\\w\\W]*select|delete|drop|update|truncate|alter|rename|create|lock|revoke|grant|show|set|from|set_config|case|when|inet_(\\w{1,100})|pg_(\\w{1,100})|who_(\\w{1,100})|exec(ute){0,1}|insert( +into){0,1}|merge|union( all){0,1}|current_catalog|current_user|current_role|current_query|current_database|current_schema|session_user|user|ascii)\\b)|--|;|\\([\\w\\W]*\\)",
        "orderby": "(?i:\\b(select|delete|drop|update|truncate|alter|rename|create|lock|revoke|grant|show|set|from|set_config|case|when|inet_(\\w{1,100})|pg_(\\w{1,100})|who_(\\w{1,100})|exec(ute){0,1}|insert( +into){0,1}|merge|union( all){0,1}|current_catalog|current_user|current_role|current_query|current_database|current_schema|session_user|user|ascii)\\b)|--|;|\\([\\w\\W]*\\)",
        "filter": "(?i:\\b(select|delete|drop|update|truncate|alter|rename|create|lock|revoke|grant|show|set|from|set_config|case|when|inet_(\\w{1,100})|pg_(\\w{1,100})|who_(\\w{1,100})|exec(ute){0,1}|insert( +into){0,1}|merge|union( all){0,1}|current_catalog|current_user|current_role|current_query|current_database|current_schema|session_user|user|ascii)\\b)|--|;"
      },
      "DescopedFieldsForUpsert": "_sequenceid"
    }
  },
  "Swagger": {
    "DocumentName": "v1",
    "DocumentVersion": "v1",
    "OAuthClientId": "dynamicapiswaggerui",
    "OAuthClientName": "Dynamic API Swagger UI",
    "AccessScopes": "dynamicapi.read:Dynamic API Read Profile;dynamicapi.write:Dynamic API Write Profile;"
  },
  "Logging": {
    "IncludeScopes": false,
    "Debug": {
      "LogLevel": {
        "Default": "Warning"
      }
    },
    "Console": {
      "LogLevel": {
        "Default": "Warning"
      }
    }
  },
  "OutboundInterface": {
    "SendingApplicationName": "CP"
  },
  "ElasticApm": {
    "Enabled": false,
    "SecretToken": "",
    "LogLevel": "Info",
    "ServerUrls": "https://apm.interneuron.io", //Set custom APM Server URL (default: http://localhost:8200)
    "ServiceName": "Interneuron.SynapseDynamic.API", //allowed characters: a-z, A-Z, 0-9, -, _, and space. Default is the entry assembly of the application
    "TransactionSampleRate": 1.0,
    "CaptureBody": "all",
    "CaptureHeaders": false
  },
  "Logs": {
    "EnableDBLogging": true,
    "EnableConsoleLogging": false,
    "EnableLogstash": false,
    "EnableSeq": false,
    "EnableES": false,
    "PostgresLogging": {
      "Level": "Error",
      "Connectionstring": "POSTGRES_SYNAPSE_DB_CONNECTION_STRINGMaximum Pool Size=512;",
      "NeedAutoCreateTable": true,
      "TableName": "logs",
      "TableSchema": "log"
    },
    "Seq": {
      "Level": "Information",
      "IngestUrl": "http://localhost:5341"
    },
    "ES": {
      "Level": "Information",
      "IngestUrl": "ELASTIC_SEARCH_URL",
      "creds": "ES_CREDENTIALS"
    }
  },
  "cache": {
    "CacheDurationInMinutes": 5,
    "Provider": "InMemoryCacheProvider",
    "Enabled": false
  }
}